"""indexes+checks: movement/sense/lang; monster checks; naming convention

Revision ID: 3a69354719ac
Revises: 06a4c94ff971
Create Date: 2025-09-01 11:49:18.580270

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3a69354719ac'
down_revision: Union[str, Sequence[str], None] = '06a4c94ff971'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_monster_languages_monster_id'), table_name='monster_languages')
    op.create_index('ix_monster_languages_language', 'monster_languages', ['language'], unique=False)
    op.drop_index(op.f('ix_monster_movement_monster_id'), table_name='monster_movement')
    op.create_index('ix_monster_movement_movement_type', 'monster_movement', ['movement_type'], unique=False)
    op.drop_index(op.f('ix_monster_senses_monster_id'), table_name='monster_senses')
    op.create_index('ix_monster_senses_sense', 'monster_senses', ['sense'], unique=False)
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_github_id'), table_name='users')
    op.drop_index(op.f('ix_users_google_id'), table_name='users')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.create_unique_constraint(op.f('uq_users_email'), 'users', ['email'])
    op.create_unique_constraint(op.f('uq_users_github_id'), 'users', ['github_id'])
    op.create_unique_constraint(op.f('uq_users_google_id'), 'users', ['google_id'])
    op.create_unique_constraint(op.f('uq_users_username'), 'users', ['username'])
    
    op.create_check_constraint(
        "ck_monsters_hit_points_positive", "monsters", "hit_points > 0"
    )
    for abil in ("str", "dex", "con", "int", "wis", "cha"):
        op.create_check_constraint(
            f"ck_monsters_{abil}_1_30", "monsters", f"{abil}_score BETWEEN 1 AND 30"
        )

    # --- ADD: Relation CHECK constraints ---
    op.create_check_constraint(
        "ck_monster_movement_speed_nonneg", "monster_movement", "speed >= 0"
    )
    op.create_check_constraint(
        "ck_monster_senses_range_nonneg", "monster_senses", "range >= 0"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("ck_monster_senses_range_nonneg", "monster_senses", type_="check")
    op.drop_constraint("ck_monster_movement_speed_nonneg", "monster_movement", type_="check")
    for abil in ("str", "dex", "con", "int", "wis", "cha"):
        op.drop_constraint(f"ck_monsters_{abil}_1_30", "monsters", type_="check")
    op.drop_constraint("ck_monsters_hit_points_positive", "monsters", type_="check")
    
    op.drop_constraint(op.f('uq_users_username'), 'users', type_='unique')
    op.drop_constraint(op.f('uq_users_google_id'), 'users', type_='unique')
    op.drop_constraint(op.f('uq_users_github_id'), 'users', type_='unique')
    op.drop_constraint(op.f('uq_users_email'), 'users', type_='unique')
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_index(op.f('ix_users_google_id'), 'users', ['google_id'], unique=True)
    op.create_index(op.f('ix_users_github_id'), 'users', ['github_id'], unique=True)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.drop_index('ix_monster_senses_sense', table_name='monster_senses')
    op.create_index(op.f('ix_monster_senses_monster_id'), 'monster_senses', ['monster_id'], unique=False)
    op.drop_index('ix_monster_movement_movement_type', table_name='monster_movement')
    op.create_index(op.f('ix_monster_movement_monster_id'), 'monster_movement', ['monster_id'], unique=False)
    op.drop_index('ix_monster_languages_language', table_name='monster_languages')
    op.create_index(op.f('ix_monster_languages_monster_id'), 'monster_languages', ['monster_id'], unique=False)
    # ### end Alembic commands ###
