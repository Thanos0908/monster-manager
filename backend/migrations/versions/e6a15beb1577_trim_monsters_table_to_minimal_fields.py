"""trim monsters table to minimal fields

Revision ID: e6a15beb1577
Revises: de0dcaf12de3
Create Date: 2025-08-15 18:27:43.768811

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e6a15beb1577'
down_revision: Union[str, Sequence[str], None] = 'de0dcaf12de3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('monster_languages',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('monster_id', sa.Uuid(), nullable=False),
    sa.Column('language', sa.String(length=64), nullable=False),
    sa.ForeignKeyConstraint(['monster_id'], ['monsters.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('monster_id', 'language', name='uq_language_per_monster')
    )
    op.create_index(op.f('ix_monster_languages_monster_id'), 'monster_languages', ['monster_id'], unique=False)
    op.drop_column('monsters', 'innate_spellcasting')
    op.drop_column('monsters', 'legendary_resistances_per_day')
    op.drop_column('monsters', 'damage_vulnerabilities')
    op.drop_column('monsters', 'spellcasting')
    op.drop_column('monsters', 'passive_perception')
    op.drop_column('monsters', 'damage_resistances')
    op.drop_column('monsters', 'regional_effects')
    op.drop_column('monsters', 'lair_actions')
    op.drop_column('monsters', 'skill_proficiencies')
    op.drop_column('monsters', 'saving_throw_proficiencies')
    op.drop_column('monsters', 'damage_immunities')
    op.drop_column('monsters', 'bonus_actions')
    op.drop_column('monsters', 'actions')
    op.drop_column('monsters', 'traits')
    op.drop_column('monsters', 'legendary_actions')
    op.drop_column('monsters', 'condition_immunities')
    op.drop_column('monsters', 'reactions')
    op.drop_column('monsters', 'skills')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('monsters', sa.Column('skills', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('monsters', sa.Column('reactions', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('monsters', sa.Column('condition_immunities', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('monsters', sa.Column('legendary_actions', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('monsters', sa.Column('traits', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('monsters', sa.Column('actions', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('monsters', sa.Column('bonus_actions', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('monsters', sa.Column('damage_immunities', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('monsters', sa.Column('saving_throw_proficiencies', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('monsters', sa.Column('skill_proficiencies', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('monsters', sa.Column('lair_actions', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('monsters', sa.Column('regional_effects', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('monsters', sa.Column('damage_resistances', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('monsters', sa.Column('passive_perception', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('monsters', sa.Column('spellcasting', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('monsters', sa.Column('damage_vulnerabilities', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('monsters', sa.Column('legendary_resistances_per_day', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('monsters', sa.Column('innate_spellcasting', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_monster_languages_monster_id'), table_name='monster_languages')
    op.drop_table('monster_languages')
    # ### end Alembic commands ###
