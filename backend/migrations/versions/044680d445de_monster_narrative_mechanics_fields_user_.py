"""monster: narrative/mechanics fields + user relationship

Revision ID: 044680d445de
Revises: ac15abcc2e83
Create Date: 2025-08-15 17:04:27.022871

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '044680d445de'
down_revision: Union[str, Sequence[str], None] = 'ac15abcc2e83'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('monsters',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=True),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('size', sa.String(length=32), nullable=False),
    sa.Column('main_type', sa.String(length=64), nullable=False),
    sa.Column('subtype', sa.String(length=128), nullable=True),
    sa.Column('alignment', sa.String(length=32), nullable=False),
    sa.Column('hit_points', sa.Integer(), nullable=False),
    sa.Column('hit_points_dice', sa.String(length=50), nullable=False),
    sa.Column('str_score', sa.Integer(), nullable=False),
    sa.Column('dex_score', sa.Integer(), nullable=False),
    sa.Column('con_score', sa.Integer(), nullable=False),
    sa.Column('int_score', sa.Integer(), nullable=False),
    sa.Column('wis_score', sa.Integer(), nullable=False),
    sa.Column('cha_score', sa.Integer(), nullable=False),
    sa.Column('saving_throw_proficiencies', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('skill_proficiencies', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('speeds', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('senses', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('passive_perception', sa.Integer(), nullable=True),
    sa.Column('languages', sa.String(length=255), nullable=True),
    sa.Column('damage_immunities', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('damage_resistances', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('damage_vulnerabilities', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('condition_immunities', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('traits', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('actions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('reactions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('bonus_actions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('legendary_resistances_per_day', sa.Integer(), nullable=True),
    sa.Column('legendary_actions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('lair_actions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('regional_effects', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('backstory', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_monsters_alignment'), 'monsters', ['alignment'], unique=False)
    op.create_index(op.f('ix_monsters_main_type'), 'monsters', ['main_type'], unique=False)
    op.create_index(op.f('ix_monsters_owner_id'), 'monsters', ['owner_id'], unique=False)
    op.create_index(op.f('ix_monsters_size'), 'monsters', ['size'], unique=False)
    op.create_index('uq_monsters_lower_name', 'monsters', [sa.literal_column('lower(name)')], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('uq_monsters_lower_name', table_name='monsters')
    op.drop_index(op.f('ix_monsters_size'), table_name='monsters')
    op.drop_index(op.f('ix_monsters_owner_id'), table_name='monsters')
    op.drop_index(op.f('ix_monsters_main_type'), table_name='monsters')
    op.drop_index(op.f('ix_monsters_alignment'), table_name='monsters')
    op.drop_table('monsters')
    # ### end Alembic commands ###
